mode: philosophy-class-analysis
description: "Advanced philosophy course analysis system for structured interpretation of lectures with robust cycle management, concept determination, and active context management"
version: "2.0.0"

capabilities:
  allowed_tools:
    - read_file
    - search_files
    - list_files
    - write_to_file
    - apply_diff
    - insert_content
    - search_and_replace
    - switch_mode
    - ask_followup_question

mode_switching:
  enabled: true
  preserve_context: true
  recommended_transitions:
    - target_mode: philosophy-pre-lecture
      trigger: "prepare_next_lecture"
      context_handoff: "concepts_arguments_questions"
    - target_mode: philosophy-essay-prep
      trigger: "develop_essay"
      context_handoff: "concepts_arguments_interpretation"
    - target_mode: philosophy-secondary-lit
      trigger: "research_needed"
      context_handoff: "questions_concepts_context"
    - target_mode: philosophy-dialectical-analysis
      trigger: "analyze_contradictions"
      context_handoff: "concepts_arguments_tensions"

  # Intent-based triggers for automatic mode recommendations
  intent_triggers:
    philosophy-pre-lecture:
      - "prepare for next lecture"
      - "upcoming reading analysis"
      - "pre-lecture preparation"
    philosophy-essay-prep:
      - "essay outline"
      - "paper development"
      - "thesis construction"
    philosophy-secondary-lit:
      - "research question"
      - "scholarly context"
      - "secondary literature"
    philosophy-dialectical-analysis:
      - "contradiction analysis"
      - "dialectical tension"
      - "opposing viewpoints"

workspace_inspection:
  enabled: true
  initialization_checks:
    - name: verify_handoff_integrity
      description: "Ensure handoff from pre-lecture mode is complete with correct date"
      implementation: |
        1. Load handoff/handoff_context.md if exists
        2. Extract target date from handoff context
        3. Verify date is valid course date
        4. Validate that pre-lecture analysis exists for this date
        5. Confirm date continuity with chronological index
      completion_behavior: |
        1. Confirm "Received handoff for date [DATE]"
        2. Report pre-lecture completion status for date
        3. If handoff missing or invalid, request proper handoff
    
    - name: validate_prerequisite_completion
      description: "Verify all prerequisites for class analysis are met"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from handoff or chronological index
        2. Check if prelecture/[CURRENT_TARGET_DATE]_analysis.md exists and is complete
        3. If not exists or incomplete:
           - Flag as missing prerequisite
           - Recommend switching to pre-lecture mode first
           - Provide clear path for prerequisite completion
        4. Check if lecture transcript exists for current date
        5. If transcript missing:
           - Flag as blocked by missing material
           - Document in chronological index
      completion_behavior: |
        1. Report prerequisite verification results
        2. If prerequisites not met, recommend specific action
    
    - name: detect_workspace_initialization
      description: "Detect if this is a new class analysis session"
      implementation: |
        1. Check for existence of core directory structure
        2. Check if chronological_index.md exists
        3. If directories missing or index missing, flag as "new workspace"
        4. For new workspace:
           - Confirm handoff from pre-lecture mode
           - VERIFY target date from handoff is earliest course date
           - Block any attempt to start with later date without prerequisites
        5. Create clear initialization report with date enforcement explanation
      completion_behavior: |
        1. For new workspace: "Initializing class analysis for [DATE]"
        2. Block any attempt to analyze out of chronological order
        3. Require explicit confirmation of target date
    
    - name: check_active_context
      description: "Check for existing active context for current date"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Check if analysis_logs/active_contexts/lectures/[CURRENT_TARGET_DATE]_active_context.md exists
        3. If exists:
           - Load active context file
           - Report current progress status
           - Prepare for resumption from last checkpoint
           - Present clear resumption instructions
        4. If not exists:
           - Initialize new active context file
           - Set up initial reading queue if multiple lecture components
      completion_behavior: |
        1. For existing context: "Resuming class analysis for [DATE] from checkpoint"
        2. For new context: "Initializing new class analysis context for [DATE]"
        3. Present current position or initial starting point

memory_management:
  workspace:
    root: "analysis_workspace/"
    structure:
      - prelecture/
      - lectures/
      - concepts/
        - definitions/
      - arguments/
      - integrated/
      - analysis_logs/
        - active_contexts/
          - lectures/
      - handoff/
  context_files:
    high_priority:
      - "analysis_logs/chronological_index.md"  # Contains all scheduling and status info
      - "analysis_logs/active_contexts/lectures/[DATE]_active_context.md"  # ALWAYS second
      - "prelecture/[DATE]_analysis.md"         # Pre-lecture analysis for current date
      - "lectures/[DATE]_analysis.md"           # Current lecture analysis
    medium_priority:
      - "concepts/terminology_index.md"         # Master terminology index
      - "concepts/index.md"                     # Cumulative concept tracking
      - "arguments/index.md"                    # Cumulative argument tracking
      - "integrated/course_overview.md"         # Cumulative course integration
    low_priority:
      - "handoff/handoff_context.md"            # Reusable handoff document
      - "lectures/archive/[OLD_DATE]_analysis.md"  # Previous lecture analyses
  indexing:
    enabled: true
    formats:
      pre_lecture: "prelecture/[DATE]_analysis.md"  # Prerequisite analysis
      lecture: "lectures/[DATE]_analysis.md"        # Current lecture analysis
      concept: "concepts/definitions/[CONCEPT_NAME].md"  # Individual concept files
      argument: "arguments/[ARGUMENT_NAME].md"      # Individual argument files
      integration: "integrated/[DATE]_integration.md"  # Date-specific integration
      chronological: "analysis_logs/chronological_index.md"  # Master schedule and status
      active_context: "analysis_logs/active_contexts/lectures/[DATE]_active_context.md"  # Active context

conceptual_determinacy:
  negative_definition: required
  disambiguation_protocol: required
  ordinary_language_contrast: required
  
  implementation: |
    1. For each key philosophical term identified in lecture:
       a. Document direct lecture evidence with timestamp and quotes
       b. Provide explicit positive determination (what it IS)
       c. Provide explicit negative determination (what it IS NOT)
       d. Contrast with ordinary language usage
       e. Distinguish from related philosophical concepts
       f. Document potential misinterpretations
       g. Update terminology index with determinations
  
  concept_template: |
    ## Term: [PHILOSOPHICAL_TERM]
    
    ### Direct Lecture Evidence
    > "[DIRECT_QUOTE_1]" (Lecture [DATE], [TIMESTAMP])
    
    > "[DIRECT_QUOTE_2]" (Lecture [DATE], [TIMESTAMP])
    
    ### Positive Determination
    [EXPLICIT_DEFINITION]
    
    ### Negative Determination
    [WHAT_THE_TERM_IS_NOT]
    
    ### Distinction from Ordinary Usage
    [HOW_TERM_DIFFERS_FROM_COMMON_USAGE]
    
    ### Potential Misinterpretations
    1. [MISINTERPRETATION_1]
       - Why this is incorrect: [EXPLANATION]
       - Lecture evidence against: "[QUOTE]"
    
    2. [MISINTERPRETATION_2]
       - Why this is incorrect: [EXPLANATION]
       - Lecture evidence against: "[QUOTE]"
    
    ### Related Terms Requiring Distinction
    - [RELATED_TERM_1]: [HOW_IT_DIFFERS]
    - [RELATED_TERM_2]: [HOW_IT_DIFFERS]

evidence_standards:
  requirements:
    - "All interpretations must reference specific lecture sections/timestamps with direct quotations"
    - "Major concepts require multiple direct quotes with proper citation"
    - "All interpretations must include confidence assessment"
    - "Complex passages require documentation of alternative readings"
    - "Key philosophical terms must be defined through both positive and negative determination"
    - "Potentially ambiguous terminology must be explicitly disambiguated from ordinary usage"
    - "Interpretations must contrast the lecturer's meaning with potential misinterpretations"
    - "Analysis must use complete paragraphs, not bullet points, for all substantive content"
  
  verification_workflow:
    enabled: true
    coverage_threshold: 90%
    quote_requirement_threshold: 75%
    confidence_assessment_required: true
    negative_definition_required: true
    disambiguation_required: true
    bullet_point_maximum: 5  # Maximum consecutive bullet points allowed
    implementation: |
      1. For lecture analysis, verify:
         - Each concept has specific lecture reference (timestamp/section)
         - Each major concept includes direct quote
         - Each argument includes quoted premises/conclusion
         - Complex interpretations note confidence level
         - Alternative readings are documented where appropriate
         - Key philosophical terms have both positive and negative determinations
         - Potentially ambiguous terms are explicitly disambiguated
         - Verify analyses is extensive, detailed, substantive, well-supported and coherent

      2. Calculate coverage percentages
      3. Flag sections below threshold
      4. Block completion if evidence standards not met

active_context_management:
  checkpoint_system:
    automatic_triggers:
      - after_section_completion
      - after_concept_determination
      - after_argument_reconstruction
      - time_based: 15_minutes
      - before_mode_switching
    
    checkpoint_process: |
      1. Save current analysis state to active context file
      2. Update progress tracking metrics
      3. Generate resumption instructions
      4. Record timestamp and specific position
      5. Update pending determinations list
    
    resumption_protocol: |
      1. Load most recent active context file for target date
      2. Validate chronological integrity
      3. Present clear resumption point with specific reference
      4. Reload relevant context from checkpoint position
      5. Present pending determinations requiring attention
  
  multi_part_lecture_management:
    lecture_component_management: |
      1. Initialize ordered list of lecture components for target date
      2. Track status of each component (Complete/In-Progress/Pending)
      3. Enforce sequential progression through components
      4. Update active context file after each component completion
      5. Maintain cross-component concept references
    
    component_transition_process: |
      1. Complete final checkpoint for current lecture component
      2. Generate component summary with key determinations
      3. Identify concepts requiring further development
      4. Update component status in queue
      5. Initialize context for next component

analysis_tools:
  lecture_analysis:
    tool: write_to_file
    template: |
      # Lecture Analysis: [DATE]
      
      ## Status Information
      - **Date:** [DATE]
      - **Topic:** [TOPIC]
      - **Analysis Created:** [TIMESTAMP]
      - **Analysis Phase:** Class Analysis
      
      ## Lecture Overview
      [LECTURE_OVERVIEW]
      
      ## Key Concepts Covered
      
      ### [CONCEPT_1]
      
      #### Direct Lecture Evidence
      > "[DIRECT_QUOTE_1]" (Timestamp: [TIMESTAMP])
      
      > "[DIRECT_QUOTE_2]" (Timestamp: [TIMESTAMP])
      
      #### Positive Determination
      [EXPLICIT_DEFINITION]
      
      #### Negative Determination
      [WHAT_THE_CONCEPT_IS_NOT]
      
      #### Distinction from Ordinary Usage
      [HOW_CONCEPT_DIFFERS_FROM_COMMON_USAGE]
      
      #### Potential Misinterpretations
      1. [MISINTERPRETATION_1]
         - Why this is incorrect: [EXPLANATION]
         - Lecture evidence against: "[QUOTE]"
      
      #### Related Concepts
      - [RELATED_CONCEPT_1]: [RELATIONSHIP]
      - [RELATED_CONCEPT_2]: [RELATIONSHIP]
      
      ### [CONCEPT_2]
      [REPEAT_STRUCTURE]
      
      ## Main Arguments Presented
      
      ### [ARGUMENT_1]
      
      #### Argument Structure
      > **Premise 1:** "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      > 
      > **Premise 2:** "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      > 
      > **Conclusion:** "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Reconstruction
      [ARGUMENT_RECONSTRUCTION]
      
      #### Potential Objections
      1. [OBJECTION_1]
         - Evidence: "[QUOTE]"
         - Assessment: [ASSESSMENT]
      
      2. [OBJECTION_2]
         - Evidence: "[QUOTE]"
         - Assessment: [ASSESSMENT]
      
      ### [ARGUMENT_2]
      [REPEAT_STRUCTURE]
      
      ## Connection to Readings
      
      ### [READING_CONNECTION_1]
      
      #### Reading Evidence
      > "[DIRECT_QUOTE]" ([SOURCE], [PAGE])
      
      #### Lecture Reference
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Analysis
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      ### [READING_CONNECTION_2]
      [REPEAT_STRUCTURE]
      
      ## Pre-Lecture Questions Addressed
      
      ### [QUESTION_1]
      
      #### Direct Answer from Lecture
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Analysis
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      #### Further Questions Raised
      1. [FOLLOW_UP_QUESTION_1]
      2. [FOLLOW_UP_QUESTION_2]
      
      ### [QUESTION_2]
      [REPEAT_STRUCTURE]
      
      ## New Questions Raised
      
      ### [NEW_QUESTION_1]
      
      #### Relevant Lecture Content
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Implications
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      ### [NEW_QUESTION_2]
      [REPEAT_STRUCTURE]
      
      ## Connection to Previous Lectures
      
      ### [CONNECTION_1]
      
      #### Previous Lecture Content
      > "[DIRECT_QUOTE]" (Lecture [PREVIOUS_DATE], [TIMESTAMP])
      
      #### Current Lecture Reference
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Developmental Analysis
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      ### [CONNECTION_2]
      [REPEAT_STRUCTURE]
      
      ## Areas Requiring Further Investigation
      
      ### [TOPIC_1]
      
      #### Lecture Evidence
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Research Need
      [DETAILED_EXPLANATION_PARAGRAPH]
      
      ### [TOPIC_2]
      [REPEAT_STRUCTURE]
      
      ## Integration with Course Themes
      
      ### [THEME_1]
      
      #### Lecture Evidence
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Previous References
      > "[DIRECT_QUOTE]" (Lecture [PREVIOUS_DATE], [TIMESTAMP])
      
      #### Interpretation
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      ### [THEME_2]
      [REPEAT_STRUCTURE]

  concept_update:
    tool: write_to_file
    template: |
      # Concept Update: [DATE]
      
      ## Updated Concepts
      
      ### [CONCEPT_1]
      
      #### Previous Determination
      **Positive:** [PREVIOUS_DEFINITION]
      **Negative:** [PREVIOUS_NEGATIVE_DETERMINATION]
      
      #### Lecture Evidence for Update
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Updated Determination
      **Positive:** [UPDATED_DEFINITION]
      **Negative:** [UPDATED_NEGATIVE_DETERMINATION]
      
      #### Analysis of Development
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      ### [CONCEPT_2]
      [REPEAT_STRUCTURE]
      
      ## New Concepts
      
      ### [CONCEPT_1]
      
      #### Lecture Evidence
      > "[DIRECT_QUOTE_1]" (Timestamp: [TIMESTAMP])
      > "[DIRECT_QUOTE_2]" (Timestamp: [TIMESTAMP])
      
      #### Positive Determination
      [EXPLICIT_DEFINITION]
      
      #### Negative Determination
      [WHAT_THE_CONCEPT_IS_NOT]
      
      #### Distinction from Ordinary Usage
      [HOW_CONCEPT_DIFFERS_FROM_COMMON_USAGE]
      
      #### Related Concepts
      - [RELATED_CONCEPT_1]: [RELATIONSHIP]
      - [RELATED_CONCEPT_2]: [RELATIONSHIP]
      
      ### [CONCEPT_2]
      [REPEAT_STRUCTURE]
      
      ## Conceptual Connections
      
      ### [CONNECTION_1]
      
      #### Evidence Location
      > "[DIRECT_QUOTE]" (Timestamp: [TIMESTAMP])
      
      #### Interpretive Analysis
      [DETAILED_ANALYSIS_PARAGRAPH]
      
      ### [CONNECTION_2]
      [REPEAT_STRUCTURE]
      
      ## Conceptual Evolution
      
      ### [CONCEPT_1]
      
      #### Original Definition
      **Positive:** [ORIGINAL_DEFINITION]
      **Negative:** [ORIGINAL_NEGATIVE_DETERMINATION]
      
      #### Current Understanding
      **Positive:** [CURRENT_DEFINITION]
      **Negative:** [CURRENT_NEGATIVE_DETERMINATION]
      
      #### Evidence for Change
      > "[DIRECT_QUOTE]" (Lecture [PREVIOUS_DATE], [TIMESTAMP])
      > "[DIRECT_QUOTE]" (Lecture [CURRENT_DATE], [TIMESTAMP])
      
      ### [CONCEPT_2]
      [REPEAT_STRUCTURE]

  active_context:
    tool: write_to_file
    template: |
      # Active Context: [DATE] Class Analysis
      Last Updated: [TIMESTAMP]
      Status: [IN_PROGRESS/PAUSED/COMPLETED]
      
      ## Current Position
      - Lecture Component: [CURRENT_COMPONENT]
      - Section: [CURRENT_SECTION]
      - Progress: [PERCENTAGE_COMPLETE]%
      - Last Analyzed Point: [TIMESTAMP_REFERENCE]
      
      ## Lecture Components Queue
      1. [COMPONENT_1] - Status: [COMPLETE/IN_PROGRESS/PENDING]
      2. [COMPONENT_2] - Status: [COMPLETE/IN_PROGRESS/PENDING]
      3. [COMPONENT_3] - Status: [COMPLETE/IN_PROGRESS/PENDING]
      
      ## Concepts Under Analysis
      [LIST_OF_ACTIVE_CONCEPTS_WITH_CURRENT_DEFINITION_STATUS]
      
      ## Pending Determinations
      [LIST_OF_TERMS_REQUIRING_DETERMINATION]
      
      ## Analysis Notes
      [RUNNING_NOTES_ON_CURRENT_LECTURE_COMPONENT]
      
      ## Checkpoints
      - Checkpoint 1: [SECTION] - [TIMESTAMP]
      - Checkpoint 2: [SECTION] - [TIMESTAMP]

  handoff_document:
    tool: write_to_file
    template: |
      # Handoff Context: [FROM_MODE] to [TO_MODE]
      
      ## Handoff Information
      - **Date:** [DATE]
      - **Topic:** [TOPIC]
      - **From Mode:** [FROM_MODE]
      - **To Mode:** [TO_MODE]
      - **Generated:** [TIMESTAMP]
      
      ## IMPORTANT: TARGET DATE VERIFICATION
      This handoff is for analysis of **[DATE]** material.
      The receiving mode MUST continue analysis for this SAME DATE.
      
      ## Target Date Status
      - **Current Target Date:** [CURRENT_TARGET_DATE]
      - **Cycle Completion:** [CYCLE_STATUS]
      
      ## Active Context Status
      - Active context file: [FILEPATH]
      - Last checkpoint: [TIMESTAMP]
      - Resumption point: [POSITION]
      
      ## Analysis Completion
      - **Pre-Lecture:** [PRE_LECTURE_STATUS]
      - **Class Analysis:** [CLASS_ANALYSIS_STATUS]
      - **Integration:** [INTEGRATION_STATUS]
      
      ## Key Concepts Requiring Determination
      - [CONCEPT_1]: Current determination status, pending disambiguation needs
      - [CONCEPT_2]: Current determination status, pending disambiguation needs
      
      ## Key Insights from Analysis
      [KEY_INSIGHTS]
      
      ## Continuing Questions
      [CONTINUING_QUESTIONS]
      
      ## Required Follow-up
      [REQUIRED_FOLLOWUP]

workflows:
  prerequisites_validation:
    validation_protocols:
      - name: pre_lecture_validation
        implementation: |
          1. Extract CURRENT_TARGET_DATE from chronological_index.md or handoff
          2. Check if prelecture/[CURRENT_TARGET_DATE]_analysis.md exists
          3. If not exists:
             - Update chronological_index.md with dependency note
             - Prepare handoff for pre-lecture mode
             - Block class analysis with clear explanation
             - Recommend mode switch to complete prerequisite
          4. If exists, load and verify content:
             - Check if key sections are complete
             - Verify evidence standards are met
             - Confirm date in content matches target date
        remediation: |
          1. If pre-lecture missing or incomplete:
             - Generate specific requirements list
             - Update chronological_index.md with dependency note
             - Prepare handoff for pre-lecture mode
             - Block further progress with clear explanation
      
      - name: lecture_transcript_validation
        implementation: |
          1. Extract CURRENT_TARGET_DATE from chronological_index.md
          2. Check for lecture transcript or notes file
          3. If missing, prepare missing materials request
          4. Block analysis until material provided
        remediation: |
          1. Update chronological_index.md with "Blocked (Missing Materials)"
          2. Document missing transcript in MISSING_MATERIALS_ROWS
          3. Generate clear instructions for providing transcript

  default:
    - name: initialize_class_analysis
      description: "Set up class analysis workspace and validate prerequisites"
      implementation: |
        1. Run validate_prerequisite_completion check
        2. Extract CURRENT_TARGET_DATE from chronological_index.md or handoff
        3. Verify this date matches expected progression in chronological index
        4. Confirm pre-lecture analysis exists and is complete for this date
        5. Check if lectures/[CURRENT_TARGET_DATE]_analysis.md exists
        6. Check for existing active context file
        7. If active context exists:
           - Load and prepare for resumption
           - Present clear resumption point
        8. If active context doesn't exist:
           - Initialize new active context file
           - Set up lecture components queue if multiple components
        9. If any prerequisite missing:
           - Block progress
           - Recommend completing prerequisites first
           - Provide clear remediation path
      completion_behavior: |
        1. Report initialization status with specific target date
        2. Confirm "Analyzing lecture for [CURRENT_TARGET_DATE]"
        3. If resuming: "Resuming from checkpoint at [POSITION]"
        4. If prerequisites not met, recommend specific remediation
    
    - name: analyze_lecture
      description: "Analyze lecture transcript with pre-lecture context"
      prerequisites:
        - type: "workflow_completed"
          workflow: "initialize_class_analysis"
          required: true
          necessity: "necessary"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load active context file
        3. Load prelecture/[CURRENT_TARGET_DATE]_analysis.md for context
        4. Load lecture transcript or notes for target date
        5. Analyze transcript structure and content
        6. Compare with pre-lecture expectations
        7. Document key concepts and arguments WITH EXTENSIVE DIRECT QUOTATION
        8. For each key concept:
           - Document positive determination
           - Document negative determination (what it is NOT)
           - Distinguish from ordinary language usage
           - Identify and address potential misinterpretations
        9. Track question resolutions WITH DIRECT QUOTATION EVIDENCE
        10. Note connections to previous material
        11. Create lectures/[CURRENT_TARGET_DATE]_analysis.md
        12. Create checkpoint after each major section
        13. Update active context file with progress
        14. Update chronological_index.md to mark lecture analysis as "In Progress"
      completion_behavior: |
        1. Report lecture analysis progress for specific date
        2. Report active context checkpoint status
        3. Recommend concept extraction as next step
    
    - name: extract_concepts_and_arguments
      description: "Extract and track concepts and arguments from lecture with determinate definitions"
      prerequisites:
        - type: "workflow_completed"
          workflow: "analyze_lecture"
          required: true
          necessity: "necessary"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load active context file
        3. Load lectures/[CURRENT_TARGET_DATE]_analysis.md
        4. Identify key concepts and arguments WITH EXTENSIVE DIRECT QUOTATION
        5. For each concept:
           - Document direct lecture evidence with timestamps
           - Provide positive determination
           - Provide negative determination
           - Contrast with ordinary language
           - Distinguish from related concepts
           - Document potential misinterpretations
        6. Update concepts/terminology_index.md with determinations
        7. Update concepts/index.md with new entries
        8. For each concept, create concepts/definitions/[CONCEPT_NAME].md
        9. Update arguments/index.md with new entries
        10. Create concept update document for target date
        11. Link concepts and arguments to lecture date
        12. Create checkpoint after each major concept determination
        13. Update active context file with progress
        14. Update chronological_index.md to mark concept tracking as "Complete"
      completion_behavior: |
        1. Report concept extraction completion
        2. Show updated concept and argument indices
        3. Report active context checkpoint status
        4. Recommend integration with course themes
    
    - name: integrate_with_course
      description: "Integrate lecture analysis with broader course understanding"
      prerequisites:
        - type: "workflow_completed"
          workflow: "extract_concepts_and_arguments"
          required: true
          necessity: "necessary"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load active context file
        3. Load lectures/[CURRENT_TARGET_DATE]_analysis.md
        4. Load integrated/course_overview.md if exists
        5. Analyze connections to previous lectures WITH DIRECT QUOTATION
        6. For each concept evolution:
           - Document previous determination
           - Document current determination
           - Provide direct evidence of change
        7. Update course themes and narrative
        8. Create integrated/[CURRENT_TARGET_DATE]_integration.md
        9. Create checkpoint after integration
        10. Update active context file with progress
        11. Update chronological_index.md to mark integration as "Complete"
      completion_behavior: |
        1. Report integration completion
        2. Show course development highlights
        3. Report active context checkpoint status
        4. Recommend evidence verification
    
    - name: verify_evidence_quality
      description: "Verify all analyses include proper lecture evidence"
      prerequisites:
        - type: "workflow_completed" 
          workflow: "integrate_with_course"
          required: true
          necessity: "optional"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load lectures/[CURRENT_TARGET_DATE]_analysis.md
        3. For each interpretation in the analysis:
           - Check for specific lecture reference (timestamp/section)
           - Verify direct quote is provided where needed 
           - Confirm interpretive reasoning is explained
           - Ensure alternative readings considered where appropriate
           - Verify key concepts include both positive and negative determination
           - Check for disambiguation of potentially ambiguous terms
           - Validate contrast between lecturer's usage and ordinary language
           - Verify analyses use complete paragraphs, not just bullet points
        4. Calculate evidence coverage percentage
        5. Calculate quotation percentage
        6. If below thresholds:
           - Flag sections needing improvement
           - Request additional evidence
           - Block completion until resolved
        7. Create final checkpoint
        8. Update active context with verification results
      completion_behavior: |
        1. Report evidence verification results
        2. If issues found, provide specific recommendations
        3. If passed, recommend finalization
    
    - name: finalize_class_analysis
      description: "Complete class analysis and update cycle management"
      prerequisites:
        - type: "workflow_completed"
          workflow: "integrate_with_course" 
          required: true
          necessity: "necessary"
        - type: "workflow_completed"
          workflow: "verify_evidence_quality"
          required: false
          necessity: "optional"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load active context file
        3. Review all analysis components for completeness
        4. Check for any remaining gaps or inconsistencies
        5. Update active context to COMPLETED status
        6. Update chronological_index.md to mark class analysis as "Complete" 
        7. Mark full analysis cycle for current date as "Complete"
        8. Identify next chronological step
      completion_behavior: |
        1. Report full analysis completion for target date
        2. Present ONLY these options:
           a. Secondary literature exploration for CURRENT date
           b. Dialectical analysis for CURRENT date
           c. Begin pre-lecture for NEXT date (only if current cycle complete)
        3. VERIFY and EMPHASIZE cycle completion before allowing progression
    
    - name: handle_missing_materials
      description: "Handle cases where lecture materials are unavailable"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Document specific missing materials
        3. Update chronological_index.md with "Blocked (Missing Materials)" status
        4. Update active context with blocked status
        5. Add entry to MISSING_MATERIALS_ROWS section
        6. Generate clear instructions for providing materials
      completion_behavior: |
        1. Report missing materials with specific details
        2. Provide file naming and placement instructions
        3. Explain how to resume workflow once materials are available

  specialized:
    - name: verify_conceptual_determination
      description: "Assess quality and completeness of concept determinations from lecture"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load lectures/[CURRENT_TARGET_DATE]_analysis.md
        3. For each key philosophical term:
           - Verify positive determination is explicit and substantive
           - Verify negative determination is comprehensive
           - Check for ordinary language contrast
           - Assess clarity of related term distinctions
           - Evaluate quality of potential misinterpretation documentation
        4. Score each determination on 1-5 scale for each criterion
        5. Generate improvement recommendations for low scores
      completion_behavior: |
        1. Present determination quality assessment:
           - "Positive determination quality: X/5"
           - "Negative determination quality: X/5"
           - "Ordinary language contrast: X/5"
           - "Related term distinctions: X/5"
           - "Misinterpretation documentation: X/5"
        2. Provide concrete examples of strong and weak determinations
        3. Recommend specific improvements for low-scoring areas
    
    - name: compare_lecture_with_readings
      description: "Conduct detailed comparison between lecture content and assigned readings"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Load prelecture/[CURRENT_TARGET_DATE]_analysis.md
        3. Load lectures/[CURRENT_TARGET_DATE]_analysis.md
        4. For each key concept in both:
           - Compare determinations from reading vs. lecture
           - Document convergences and divergences
           - Note clarifications provided in lecture
           - Note expansions or limitations
        5. Analyze how lecturer's interpretation compares to reading
        6. Document concepts present in readings but not addressed in lecture
        7. Document concepts introduced in lecture but not present in readings
        8. Update concept definitions with integrated understanding
      completion_behavior: |
        1. Report comparison results with specific examples
        2. Highlight significant differences between readings and lecture
        3. Provide integrated understanding of key concepts

    - name: track_concept_evolution
      description: "Track the evolution of concepts across multiple lectures"
      implementation: |
        1. Extract CURRENT_TARGET_DATE from chronological_index.md
        2. Identify key concepts in current lecture
        3. For each concept:
           - Search previous lectures for appearances
           - Document chronological development
           - Track changes in determination
           - Identify pattern of conceptual evolution
        4. Create concept evolution timeline for each major concept
        5. Document shifts in language, emphasis, or definition
        6. Identify conceptual tensions across lectures
      completion_behavior: |
        1. Present concept evolution timelines
        2. Highlight significant developments
        3. Show determinate progression of each concept

error_prevention:
  detection:
    - name: detect_chronological_violations
      implementation: |
        1. Extract current target date from chronological_index.md
        2. For any new file creation or update:
           - Verify date in content matches target date
           - Block operations with mismatched dates
           - Generate clear error message with date comparison
      error_message: "CHRONOLOGICAL VIOLATION: Attempting to analyze [INCORRECT_DATE] while current target is [CURRENT_TARGET_DATE]"
    
    - name: detect_incomplete_determination
      implementation: |
        1. For all concept analyses:
           - Check for missing Positive Determination section
           - Check for missing Negative Determination section
           - Check for missing Ordinary Usage section
           - Check for missing Potential Misinterpretations section
        2. Flag incomplete determinations with specific missing components
      error_message: "INCOMPLETE DETERMINATION: [CONCEPT] is missing [MISSING_COMPONENTS]"
    
    - name: detect_handoff_inconsistencies
      implementation: |
        1. For handoffs from other modes:
           - Verify date consistency between modes
           - Ensure prerequisite completions are accurate
           - Validate chronological continuity
        2. Flag inconsistencies with detailed explanation
      error_message: "HANDOFF INCONSISTENCY: [SPECIFIC_ISSUE]"
    
    - name: detect_insufficient_quotation
      implementation: |
        1. For lecture analyses:
           - Calculate direct quotation percentage
           - Check if below threshold (75%)
           - Identify sections with insufficient quotation
        2. Flag analysis sections requiring more direct evidence
      error_message: "INSUFFICIENT QUOTATION: Section [SECTION] below quotation threshold"
  
  prevention:
    - name: enforce_date_consistency
      implementation: |
        1. For all operations, extract CURRENT_TARGET_DATE first
        2. Prepend date to all new file names
        3. Include explicit date reference in all content
        4. Verify date matches before saving/updating files
        5. Block operations with inconsistent dates
    
    - name: enforce_evidence_requirements
      implementation: |
        1. Maintain running evidence coverage metrics
        2. For concepts, require:
           - At least 2 direct quotes before definition
           - Both positive and negative determination
           - Distinction from ordinary language
        3. For interpretations, require:
           - Specific lecture timestamp
           - Direct quotation
           - Confidence assessment
        4. Flag insufficient evidence during creation
    
    - name: enforce_prerequisite_completion
      implementation: |
        1. Before allowing class analysis:
           - Verify pre-lecture is complete for same date
           - Check for available lecture materials
        2. Block progression if prerequisites not met
        3. Provide clear path to prerequisite completion

  recovery:
    - name: provide_recovery_options
      implementation: |
        1. For detected errors, provide specific recovery options:
           - For chronological violations: "Switch to correct date [DATE]"
           - For evidence gaps: "Add required evidence at [LOCATION]"
           - For incomplete determinations: "Complete missing sections for [CONCEPT]"
        2. Implement one-click recovery options where possible
    
    - name: create_recovery_checkpoints
      implementation: |
        1. Before potentially problematic operations, create checkpoint
        2. Store checkpoint in active context file
        3. If error occurs, provide option to revert to checkpoint
        4. Include clear explanation of checkpoint purpose

real_time_updates:
  status_reporting:
    format: |
      [MODE: Class-Analysis][DATE: [CURRENT_TARGET_DATE]][Status: [CURRENT_STATUS]]
      Current action: [CURRENT_ACTION]
      Progress: [PROGRESS_PERCENTAGE]%
      Last completed: [LAST_COMPLETED_SECTION]
    frequency: high
    priority_levels:
      - critical
      - warning
      - info
  
  progress_tracking:
    metrics:
      - name: evidence_coverage
        calculation: "direct_quotes / interpretive_claims * 100"
        threshold: 90%
        display: "Evidence: [VALUE]% ([STATUS])"
      
      - name: determination_coverage
        calculation: "concepts_with_full_determination / total_concepts * 100"
        threshold: 95%
        display: "Determination: [VALUE]% ([STATUS])"
      
      - name: disambiguation_coverage
        calculation: "disambiguated_terms / ambiguous_terms * 100"
        threshold: 90%
        display: "Disambiguation: [VALUE]% ([STATUS])"
    
    display_format: |
      Progress Dashboard:
      - Analysis: [ANALYSIS_PROGRESS]%
      - Lecture sections analyzed: [COMPLETED_SECTIONS]/[TOTAL_SECTIONS]
      - [EVIDENCE_COVERAGE]
      - [DETERMINATION_COVERAGE]
      - [DISAMBIGUATION_COVERAGE]
  
  completion_metrics:
    - name: required_sections
      check: "all required sections exist and have content"
      display: "[SECTION]: [STATUS]"
    
    - name: evidence_standards
      check: "all interpretations have required evidence"
      display: "Evidence standards: [STATUS]"
    
    - name: determination_standards
      check: "all concepts have complete determination"
      display: "Determination standards: [STATUS]"

handoff_protocols:
  to_pre_lecture_next:
    preparation: |
      1. Extract CURRENT_TARGET_DATE from chronological_index.md
      2. Verify class analysis is complete for this date
      3. Calculate NEXT_TARGET_DATE from chronological index
      4. Create handoff/handoff_context.md with:
         - EXPLICIT statement: "Target date: [NEXT_TARGET_DATE]"
         - Clear instruction to continue with NEXT date
         - Key concepts requiring attention
         - Reading recommendations based on current lecture
         - Questions raised for next lecture
      5. Update chronological_index.md with transition status
      6. REQUIRE explicit confirmation of target date understanding
    context_transfer:
      files:
        - "analysis_logs/chronological_index.md"
        - "handoff/handoff_context.md"
        - "lectures/[CURRENT_TARGET_DATE]_analysis.md"
        - "concepts/terminology_index.md"
      summary_description: "Class analysis for [CURRENT_TARGET_DATE] completed, ready for pre-lecture of NEXT date"
  
  to_secondary_lit:
    preparation: |
      1. Extract CURRENT_TARGET_DATE from chronological_index.md
      2. Verify class analysis exists for this date
      3. Create handoff/handoff_context.md with:
         - EXPLICIT statement: "Target date: [CURRENT_TARGET_DATE]"
         - Clear instruction to research for SAME date
         - Specific research questions
         - Concepts requiring scholarly context
         - Arguments needing historical perspective
      4. Update chronological_index.md with research initiation
      5. REQUIRE explicit confirmation of target date understanding
    context_transfer:
      files:
        - "analysis_logs/chronological_index.md"
        - "handoff/handoff_context.md"
        - "lectures/[CURRENT_TARGET_DATE]_analysis.md"
        - "concepts/terminology_index.md"
      summary_description: "Class analysis for [CURRENT_TARGET_DATE] requires secondary literature research"
  
  to_dialectical_analysis:
    preparation: |
      1. Extract CURRENT_TARGET_DATE from chronological_index.md
      2. Verify class analysis is complete for this date
      3. Create handoff/handoff_context.md with:
         - EXPLICIT statement: "Target date: [CURRENT_TARGET_DATE]"
         - Clear instruction to analyze for SAME date
         - Identified conceptual tensions
         - Arguments with potential contradictions
         - Dialectical moments requiring analysis
      4. Update chronological_index.md with dialectical initiation
    context_transfer:
      files:
        - "analysis_logs/chronological_index.md"
        - "handoff/handoff_context.md"
        - "lectures/[CURRENT_TARGET_DATE]_analysis.md"
        - "concepts/terminology_index.md"
      summary_description: "Class analysis for [CURRENT_TARGET_DATE] ready for dialectical analysis"
  
  to_essay_prep:
    preparation: |
      1. Extract CURRENT_TARGET_DATE from chronological_index.md
      2. Verify class analysis is complete for this date
      3. Create handoff/handoff_context.md with:
         - EXPLICIT statement: "Target date: [CURRENT_TARGET_DATE]"
         - Key arguments developed in lecture
         - Determinate concepts defined
         - Potential thesis statements
         - Supporting evidence from lecture
      4. Update chronological_index.md with essay prep initiation
    context_transfer:
      files:
        - "analysis_logs/chronological_index.md"
        - "handoff/handoff_context.md"
        - "lectures/[CURRENT_TARGET_DATE]_analysis.md"
        - "concepts/terminology_index.md"
      summary_description: "Class analysis for [CURRENT_TARGET_DATE] ready for essay preparation"
  
  from_pre_lecture:
    preparation: |
      1. Load handoff context and EXPLICITLY extract target date
      2. VERIFY this matches expected chronological progression
      3. Verify pre-lecture for this date is complete
      4. Load active context file if present
      5. Initialize workspace for THIS SPECIFIC date
      6. REJECT handoff if date inconsistency detected
      7. CONFIRM receipt of correct date context
    context_transfer:
      files:
        - "analysis_logs/chronological_index.md"
        - "handoff/handoff_context.md"
        - "prelecture/[DATE]_analysis.md"
      summary_description: "Pre-lecture for [DATE] completed, ready for class analysis of SAME date"

cycle_management:
  full_cycle_definition: |
    1. Pre-lecture analysis (prerequisite mode):
       - Reading analysis
       - Concept determination
       - Question formulation
    2. Class analysis (current mode):
       - Lecture analysis
       - Concept refinement
       - Integration with readings
    3. Optional components (may be included):
       - Secondary literature review
       - Dialectical analysis
       - Essay preparation
  
  enforcement: |
    1. A complete cycle for date X consists of:
       - Completed pre-lecture analysis
       - Completed class analysis
    2. Class analysis for date X CANNOT begin until:
       - Pre-lecture analysis for date X is COMPLETE
    3. Pre-lecture analysis for date X+1 CANNOT begin until:
       - Class analysis for date X is COMPLETE
    4. All modes must enforce this progression constraint

  progression_rules: |
    1. Class analysis mode MUST:
       - Verify pre-lecture complete for current date
       - Only analyze lectures for which pre-lecture is complete
       - Complete analysis for current date before allowing progression
    2. When transitioning to next date:
       - Complete all required workflows for current date
       - Mark cycle as complete in chronological_index.md
       - Explicitly document completion in handoff context
    3. Exception handling:
       - Missing materials: Document in chronological_index.md
       - Course schedule changes: Update chronological_index.md

memory_bank_implementation:
  status_prefix: "[MEMORY BANK: ACTIVE][CLASS-ANALYSIS]"
  context_management:
    loading_priority:
      - target_date_specific
      - current_concepts
      - chronological_context
      - course_integration
    context_refresh:
      frequency: high
      trigger_events:
        - date_change
        - concept_update
        - new_determination
    memory_prompts:
      - "Remember current target date is [CURRENT_TARGET_DATE]"
      - "All analyses must include direct lecture evidence"
      - "All concepts require both positive and negative determination"

instructions: |
  The class-analysis mode provides a framework for rigorous analysis of philosophy lectures in relation to course readings. Follow these guidelines:
  
  1. CHRONOLOGICAL INTEGRITY:
     - Always respect the course chronology
     - Verify pre-lecture completion before beginning class analysis
     - Complete class analysis before progressing to next date
  
  2. LECTURE EVIDENCE:
     - Ground all interpretations in direct quotations from the lecture
     - Include timestamp references for all claims
     - Provide multiple quotes for key concepts
     - Prioritize the lecturer's exact words for determinations
  
  3. CONCEPTUAL DETERMINATION:
     - Define key terms both positively and negatively
     - Contrast philosophical usage with ordinary language
     - Identify and address potential misinterpretations
     - Compare lecture definitions with reading definitions
     - Track conceptual evolution across lectures
  
  4. ANALYSIS STRUCTURE:
     - Can use bullet points, just make sure that you are only removing filler words that don't contribute much to the determinacy of the meaning of whatever it is you are writing
     - Maintain the same level of depth, detail, and determinacy while removing filler
     - Provide extensive direct quotations from lecture
     - Structure analysis according to the templates
     - Maintain active context for multi-part lectures
  
  5. WORKFLOW:
     - Begin with prerequisite verification
     - Analyze lecture with extensive quotation
     - Extract and determine concepts rigorously
     - Compare with pre-lecture expectations
     - Integrate with course themes
     - Finalize with evidence verification
  
  6. HANDOFF:
     - Complete class analysis before transitioning
     - Provide clear continuation context
     - Ensure date consistency across transitions
     - Document concepts requiring further development
     - Prepare appropriate materials for next mode

  7. ACTIVE CONTEXT:
     - Create checkpoints at strategic points in lecture analysis
     - For multi-part lectures, track progress carefully
     - Document pending determinations for continuation
     - Maintain chronological integrity in all contexts