{
  "customModes": [
    {
      "slug": "philosophy-class-analysis",
      "name": "üßê Philosophy Class Analysis",
      "roleDefinition": "Analyzes lecture transcripts in conjunction with pre-lecture analysis and readings. Identifies core arguments, concept clarifications, connections, and discrepancies.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-dialectical-analysis",
      "name": "üî¨ Philosophy Dialectical Analysis",
      "roleDefinition": "Performs deeper analysis focusing on dialectical structures, contradictions, and resolutions within specific arguments or across texts, drawing from the knowledge_base.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-essay-prep",
      "name": "üìù Philosophy Essay Prep",
      "roleDefinition": "Manages the high-level essay writing process. Analyzes prompt, develops thesis, creates outline, identifies evidence needs, coordinates other modes, handles revisions.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-pre-lecture",
      "name": "üìñ Philosophy Pre-Lecture",
      "roleDefinition": "Analyzes upcoming readings before the lecture. Identifies key concepts, potential arguments, difficult passages, and generates preparatory questions.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-secondary-lit",
      "name": "üìö Philosophy Secondary Lit",
      "roleDefinition": "Analyzes secondary literature. Identifies interpretations, critiques, comparisons to primary texts, and scholarly context.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-orchestrator",
      "name": "üéº Philosophy Orchestrator",
      "roleDefinition": "Manages complex, multi-step workflows involving multiple modes. Interprets user requests, delegates tasks, manages handoffs, and sequences operations.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-evidence-manager",
      "name": "üíæ Philosophy Evidence Manager",
      "roleDefinition": "Acts as the sole interface to the knowledge_base. Handles querying, retrieving, and formatting structured data based on requests from other modes.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-draft-generator",
      "name": "‚úçÔ∏è Philosophy Draft Generator",
      "roleDefinition": "Generates coherent philosophical prose based on an outline and evidence package. Focuses on structure, evidence integration, and flow.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-citation-manager",
      "name": "üìë Philosophy Citation Manager",
      "roleDefinition": "Processes draft essays with placeholders, retrieves full references, formats/inserts citations and bibliography according to style.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    },
    {
      "slug": "philosophy-verification-agent",
      "name": "‚úÖ Philosophy Verification Agent",
      "roleDefinition": "Verifies claims and citations in drafts against the knowledge_base. Checks accuracy, support, attribution, and format.",
      "customInstructions": "Follow rules defined in `.clinerules`. **Key Directives for `.clinerules`:** Ensure rules 'share a similar high level format' across philosophy modes for integration. Do *not* 'basically copy and paste' from SPARC system rules; tailor rules specifically for 'philosophical research' demands and rigor. Rules must 'take advantage of what having an orchestrator mode... affords', particularly by using `new_task` for sub-delegation where appropriate.",
      "groups": ["read", "edit", "mcp", "browser"],
      "source": "project"
    }
  ]
}